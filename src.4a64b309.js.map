{"version":3,"sources":["data/dataStore.js","data/yahooFinanceAPI.js","utils.js","data/stockQuotesData.js","framework/render.js","components/SearchByTicker.js","components/StockTickerQuotes.js","components/StockQuotesResults.js","components/App.js","index.js"],"names":["dataStore","currentTicker","tickerProfile","currentStock","stockProfile","currentGainers","gainersProfile","isSearchDataLoading","isSwitchDataLoading","error","getQuotesByTickerURL","ticker","replace","getGainersLosersURL","stock","fetchBySymbol","url","fetch","method","headers","then","res","ok","json","Error","statusText","fetchGainersLosers","NEW_YORK_STOCK","LONDON_STOCK","SINGAPORE_STOCK","allowedTickers","getDateFromUnixTimestamp","dt","Date","toLocaleDateString","getCurrentTickerData","window","isCurrentTickerLoaded","Boolean","validateAndLoadTickerData","includes","toLowerCase","join","Promise","resolve","urlByTicker","quoteResponse","data","result","performSearch","catch","finally","renderApp","Component","Target","componentFunction","targetElement","document","getElementById","innerHTML","SearchByTicker","StockTickerQuotes","map","getPreparedItem","item","symbol","longName","fullExchangeName","regularMarketPrice","regularMarketDayRange","StockQuotesResults","content","App","module","hot","accept"],"mappings":"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","file":"src.4a64b309.js","sourceRoot":"..\\src","sourcesContent":["const dataStore = {\n  currentTicker: '',\n  tickerProfile: {},\n  currentStock: 'GB',\n  stockProfile: {},\n  currentGainers: '',\n  gainersProfile: {},\n  isSearchDataLoading: false,\n  isSwitchDataLoading: false,\n  error: null,\n};\n\nexport default dataStore;\n","export function getQuotesByTickerURL(ticker) {\n  let tickerTemplate = ticker.replace(/,/g, '%2C');\n  return `https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/v2/get-quotes?region=US&symbols=${tickerTemplate}`;\n}\n\nexport function getGainersLosersURL(stock) {\n  return `https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/v2/get-movers?region=${stock}&lang=en-US&count=6&start=0`;\n}\n\nexport const fetchBySymbol = url =>\n  fetch(url, {\n    method: 'GET',\n    headers: {\n      'x-rapidapi-key': process.env.YAHOO_FINANCE_API_KEY,\n      'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com',\n    },\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    throw new Error(res.statusText);\n  });\n\nexport const fetchGainersLosers = url =>\n  fetch(url, {\n    method: 'GET',\n    headers: {\n      'x-rapidapi-key': process.env.YAHOO_FINANCE_API_KEY,\n      'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com',\n    },\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    throw new Error(res.statusText);\n  });\n","export const NEW_YORK_STOCK = 'US';\nexport const LONDON_STOCK = 'GB';\nexport const SINGAPORE_STOCK = 'SG';\n\nconst allowedTickers = ['amd', 'ibm', 'aapl'];\nexport default allowedTickers;\n\nexport function getDateFromUnixTimestamp(dt) {\n  return new Date(dt * 1000).toLocaleDateString();\n}\n","import { getQuotesByTickerURL, fetchBySymbol } from './yahooFinanceAPI';\nimport allowedTickers from '../utils';\n\nexport function getCurrentTickerData() {\n  const { currentTicker, tickerProfile } = window.dataStore;\n  return tickerProfile[currentTicker];\n}\n\nexport function isCurrentTickerLoaded() {\n  return Boolean(getCurrentTickerData());\n}\n\nexport function validateAndLoadTickerData() {\n  const { currentTicker } = window.dataStore;\n\n  if (!allowedTickers.includes(currentTicker.toLowerCase())) {\n    const error = `enter one of the company Tickers: ${allowedTickers.join(',')}.`;\n    return Promise.resolve({ error });\n  }\n\n  const urlByTicker = getQuotesByTickerURL(currentTicker);\n  if (!isCurrentTickerLoaded()) {\n    return fetchBySymbol(urlByTicker).then(({ quoteResponse }) => ({\n      data: quoteResponse.result,\n    }));\n  }\n\n  return Promise.resolve({});\n}\n\nexport function performSearch(ticker) {\n  window.dataStore.currentTicker = ticker;\n  window.dataStore.error = null;\n  window.isSearchDataLoading = true;\n\n  window\n    .validateAndLoadTickerData()\n    .then(({ error, data }) => {\n      window.dataStore.isSearchDataLoading = false;\n      if (error) {\n        window.dataStore.error = error;\n      } else if (data) {\n        window.dataStore.tickerProfile[ticker] = data;\n      }\n    })\n    .catch(() => {\n      window.dataStore.error = 'Some error occurred.';\n    })\n    .finally(window.renderApp);\n}\n","let Component, Target;\n\nexport default function renderApp(componentFunction, targetElement) {\n  if (componentFunction) Component = componentFunction;\n  if (targetElement) Target = targetElement;\n  document.getElementById(Target).innerHTML = `\n    ${Component()}\n    `;\n}\n","export default function SearchByTicker() {\n  return `<input\n      type = \"text\" \n      value = \"${window.dataStore.currentTicker}\" \n      onchange = \"window.performSearch(this.value);\"\n    />`;\n}\n","import { getCurrentTickerData } from '../data/stockQuotesData';\n\nexport default function StockTickerQuotes() {\n  let quotesData = getCurrentTickerData();\n  let domeElements = quotesData.map(getPreparedItem).join('');\n\n  function getPreparedItem(item) {\n    return `\n        <h4>${item.symbol}</h4>\n        <ul>\n        <li>${item.longName} </li>\n        <li>${item.fullExchangeName} </li>\n        <li>${item.regularMarketPrice} </li>\n        <li>${item.regularMarketDayRange} </li>\n        </ul>\n        `;\n  }\n\n  return `\n      <div>${domeElements}</div>\n    `;\n}\n","import { isCurrentTickerLoaded } from '../data/stockQuotesData';\nimport StockTickerQuotes from './StockTickerQuotes';\n\nexport default function StockQuotesResults() {\n  const { currentTicker, isSearchDataLoading, error } = window.dataStore;\n  let content = '';\n  if (currentTicker === '') {\n    content = 'Search by ticker';\n  } else {\n    if (isSearchDataLoading) {\n      content = 'Loading...';\n    }\n    if (error !== null) {\n      content = error;\n    }\n    if (isCurrentTickerLoaded()) {\n      content += `\n          ${StockTickerQuotes()}\n        `;\n    }\n  }\n  return `\n      <div>${content}</div>\n      `;\n}\n","import SearchByTicker from './SearchByTicker';\nimport Results from './StockQuotesResults';\n\nexport default function App() {\n  return `<section>\n      ${SearchByTicker()}\n      ${Results()}\n  \n    </section>`;\n}\n","import dataStore from './data/dataStore';\nimport { validateAndLoadTickerData, performSearch } from './data/stockQuotesData';\nimport renderApp from './framework/render';\nimport App from './components/App';\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nwindow.dataStore = dataStore;\n\nwindow.renderApp = renderApp;\nwindow.performSearch = performSearch;\nwindow.validateAndLoadTickerData = validateAndLoadTickerData;\n\nrenderApp(App, 'app-root');\n"]}